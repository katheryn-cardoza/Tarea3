{"ast":null,"code":"'use strict';\n\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport WorkletEventHandler from '../reanimated2/WorkletEventHandler';\nimport '../reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../reanimated2/platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../reanimated2/core';\nimport { SharedTransition, LayoutAnimationType } from '../reanimated2/layoutReanimation';\nimport { getShadowNodeWrapperFromRef } from '../reanimated2/fabricUtils';\nimport { removeFromPropsRegistry } from '../reanimated2/PropsRegistry';\nimport { getReduceMotionFromConfig } from '../reanimated2/animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../reanimated2/component/LayoutAnimationConfig';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport { has, flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport { isFabric, isJest, isWeb, shouldBeUseWeb } from '../reanimated2/PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport { startWebLayoutAnimation, tryActivateLayoutTransition, configureWebLayoutAnimations, getReducedMotionFromConfig, saveSnapshot } from '../reanimated2/layoutReanimation/web';\nimport { updateLayoutAnimations } from '../reanimated2/UpdateLayoutAnimations';\nimport { addHTMLMutationObserver } from '../reanimated2/layoutReanimation/web/domUtils';\nvar IS_WEB = isWeb();\nvar IS_FABRIC = isFabric();\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nexport function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _defineProperty(_assertThisInitialized(_this), \"_styles\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_animatedProps\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"_viewTag\", -1);\n      _defineProperty(_assertThisInitialized(_this), \"_isFirstRender\", true);\n      _defineProperty(_assertThisInitialized(_this), \"jestAnimatedStyle\", {\n        value: {}\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_component\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_sharedElementTransition\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_jsPropsUpdater\", new JSPropsUpdater());\n      _defineProperty(_assertThisInitialized(_this), \"_InlinePropManager\", new InlinePropManager());\n      _defineProperty(_assertThisInitialized(_this), \"_PropsFilter\", new PropsFilter());\n      _defineProperty(_assertThisInitialized(_this), \"_viewInfo\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"context\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"_setComponentRef\", setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = IS_WEB ? ref : findNodeHandle(ref);\n          var _this$props3 = _this.props,\n            layout = _this$props3.layout,\n            entering = _this$props3.entering,\n            exiting = _this$props3.exiting,\n            sharedTransitionTag = _this$props3.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            var _this$context;\n            if (!shouldBeUseWeb()) {\n              enableLayoutAnimations(true, false);\n            }\n            var skipEntering = (_this$context = _this.context) === null || _this$context === void 0 ? void 0 : _this$context.current;\n            if (entering && !skipEntering) {\n              var _this$props;\n              updateLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering, (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : _this$props.style, AnimatedComponent.displayName));\n            }\n            if (sharedTransitionTag && !IS_WEB) {\n              var _this$props$sharedTra;\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : new SharedTransition();\n              var reduceMotionInTransition = getReduceMotionFromConfig(sharedElementTransition.getReduceMotion());\n              if (!reduceMotionInTransition) {\n                sharedElementTransition.registerTransition(tag, sharedTransitionTag);\n                _this._sharedElementTransition = sharedElementTransition;\n              }\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if (isJest()) {\n        _this.jestAnimatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n        this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        var layout = this.props.layout;\n        if (layout) {\n          this._configureLayoutTransition();\n        }\n        if (IS_WEB) {\n          if (this.props.exiting) {\n            saveSnapshot(this._component);\n          }\n          if (!this.props.entering || getReducedMotionFromConfig(this.props.entering)) {\n            this._isFirstRender = false;\n            return;\n          }\n          startWebLayoutAnimation(this.props, this._component, LayoutAnimationType.ENTERING);\n        }\n        this._isFirstRender = false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_sharedElementT;\n        this._detachNativeEvents();\n        this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._InlinePropManager.detachInlineProps();\n        (_this$_sharedElementT = this._sharedElementTransition) === null || _this$_sharedElementT === void 0 ? void 0 : _this$_sharedElementT.unregisterTransition(this._viewTag);\n        var exiting = this.props.exiting;\n        if (IS_WEB && this.props.exiting && !getReducedMotionFromConfig(this.props.exiting)) {\n          addHTMLMutationObserver();\n          startWebLayoutAnimation(this.props, this._component, LayoutAnimationType.EXITING);\n        } else if (exiting) {\n          var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? getReduceMotionFromConfig(exiting.getReduceMotion()) : getReduceMotionFromConfig();\n          if (!reduceMotionInExiting) {\n            var _this$props2;\n            updateLayoutAnimations(this._viewTag, LayoutAnimationType.EXITING, maybeBuild(exiting, (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n          }\n        }\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component, _getScrollableNode, _ref;\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? (_getScrollableNode = (_ref = this._component).getScrollableNode) === null || _getScrollableNode === void 0 ? void 0 : _getScrollableNode.call(_ref) : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = null;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === null) {\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (IS_WEB && this._styles !== null) {\n          for (var style of this._styles) {\n            style.viewsRef.remove(this);\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (IS_FABRIC) {\n            removeFromPropsRegistry(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n        var viewTag = null;\n        for (var _key in this.props) {\n          var _prop = this.props[_key];\n          if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            _prop.current.registerForEvents(viewTag, _key);\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 ? void 0 : (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 ? void 0 : _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3, _getAnimatableRef, _ref2;\n        if (this._viewInfo !== undefined) {\n          return this._viewInfo;\n        }\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? (_getAnimatableRef = (_ref2 = this._component).getAnimatableRef) === null || _getAnimatableRef === void 0 ? void 0 : _getAnimatableRef.call(_ref2) : this;\n        if (IS_WEB) {\n          viewTag = this._component;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance === null || hostInstance === void 0 ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) === null || _hostInstance$viewCon === void 0 ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig;\n          if (IS_FABRIC) {\n            shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n          }\n        }\n        this._viewInfo = {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n        return this._viewInfo;\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (isJest()) {\n            _this2.jestAnimatedStyle.value = _objectSpread(_objectSpread({}, _this2.jestAnimatedStyle.value), style.initial.value);\n            style.jestAnimatedStyle.current = _this2.jestAnimatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, _prevState, snapshot) {\n        var layout = this.props.layout;\n        var oldLayout = prevProps.layout;\n        if (layout !== oldLayout) {\n          this._configureLayoutTransition();\n        }\n        this._reattachNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB && this.props.exiting) {\n          saveSnapshot(this._component);\n        }\n        if (IS_WEB && snapshot !== null && this.props.layout && !getReducedMotionFromConfig(this.props.layout)) {\n          tryActivateLayoutTransition(this.props, this._component, snapshot);\n        }\n      }\n    }, {\n      key: \"_configureLayoutTransition\",\n      value: function _configureLayoutTransition() {\n        var layout = this.props.layout ? maybeBuild(this.props.layout, undefined, AnimatedComponent.displayName) : undefined;\n        updateLayoutAnimations(this._viewTag, LayoutAnimationType.LAYOUT, layout);\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate() {\n        var _this$_component4;\n        if (IS_WEB && ((_this$_component4 = this._component) === null || _this$_component4 === void 0 ? void 0 : _this$_component4.getBoundingClientRect) !== undefined) {\n          return this._component.getBoundingClientRect();\n        }\n        return null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n        if (isJest()) {\n          filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n        }\n        if (this._isFirstRender && IS_WEB && filteredProps.entering && !getReducedMotionFromConfig(filteredProps.entering)) {\n          var _filteredProps$style;\n          filteredProps.style = _objectSpread(_objectSpread({}, (_filteredProps$style = filteredProps.style) != null ? _filteredProps$style : {}), {}, {\n            visibility: 'hidden'\n          });\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return React.createElement(Component, _extends({}, filteredProps, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  _defineProperty(AnimatedComponent, \"contextType\", SkipEnteringContext);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["_defineProperty2","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","_extends","assign","bind","target","i","source","key","hasOwnProperty","_defineProperty","obj","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","React","findNodeHandle","Platform","WorkletEventHandler","invariant","adaptViewConfig","RNRenderer","enableLayoutAnimations","SharedTransition","LayoutAnimationType","getShadowNodeWrapperFromRef","removeFromPropsRegistry","getReduceMotionFromConfig","maybeBuild","SkipEnteringContext","JSPropsUpdater","has","flattenArray","setAndForwardRef","isFabric","isJest","isWeb","shouldBeUseWeb","InlinePropManager","PropsFilter","startWebLayoutAnimation","tryActivateLayoutTransition","configureWebLayoutAnimations","getReducedMotionFromConfig","saveSnapshot","updateLayoutAnimations","addHTMLMutationObserver","IS_WEB","IS_FABRIC","onlyAnimatedStyles","styles","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","createAnimatedComponent","Component","options","isReactComponent","name","AnimatedComponent","_React$Component","props","_this","getForwardedRef","forwardedRef","setLocalRef","ref","tag","_this$props3","layout","entering","exiting","sharedTransitionTag","_this$context","skipEntering","context","current","_this$props","ENTERING","displayName","_this$props$sharedTra","sharedElementTransition","sharedTransitionStyle","reduceMotionInTransition","getReduceMotion","registerTransition","_sharedElementTransition","_component","jestAnimatedStyle","componentDidMount","_attachNativeEvents","_jsPropsUpdater","addOnJSPropsChangeListener","_attachAnimatedStyles","_InlinePropManager","attachInlineProps","_getViewInfo","_configureLayoutTransition","_isFirstRender","componentWillUnmount","_this$_sharedElementT","_detachNativeEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","unregisterTransition","_viewTag","EXITING","reduceMotionInExiting","_this$props2","_getEventViewRef","_this$_component","_getScrollableNode","_ref","getScrollableNode","node","viewTag","prop","setNativeProps","registerForEvents","unregisterFromEvents","_styles","remove","_this$props$animatedP","animatedProps","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_this$_component2","_this$_component2$set","_this$_component3","_getAnimatableRef","_ref2","_viewInfo","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","_hostInstance$viewCon","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","_this2","_this$props$animatedP2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","hasOneSameStyle","_loop","prevStyle","isPresent","some","add","initial","componentDidUpdate","_prevState","snapshot","oldLayout","LAYOUT","getSnapshotBeforeUpdate","_this$_component4","getBoundingClientRect","render","filteredProps","_PropsFilter","filterNonAnimatedProps","_filteredProps$style","visibility","platformProps","select","web","default","collapsable","createElement","_setComponentRef","forwardRef"],"sources":["C:\\Users\\Katheryn\\androidstudio\\Tarea3\\Navegacion\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { findNodeHandle, Platform } from 'react-native';\nimport WorkletEventHandler from '../reanimated2/WorkletEventHandler';\nimport '../reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../reanimated2/platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../reanimated2/core';\nimport {\n  SharedTransition,\n  LayoutAnimationType,\n} from '../reanimated2/layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../reanimated2/commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../reanimated2/fabricUtils';\nimport { removeFromPropsRegistry } from '../reanimated2/PropsRegistry';\nimport { getReduceMotionFromConfig } from '../reanimated2/animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../reanimated2/component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../reanimated2';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n} from './commonTypes';\nimport { has, flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport {\n  isFabric,\n  isJest,\n  isWeb,\n  shouldBeUseWeb,\n} from '../reanimated2/PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n} from '../reanimated2/layoutReanimation/web';\nimport { updateLayoutAnimations } from '../reanimated2/UpdateLayoutAnimations';\nimport type { CustomConfig } from '../reanimated2/layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { addHTMLMutationObserver } from '../reanimated2/layoutReanimation/web/domUtils';\n\nconst IS_WEB = isWeb();\nconst IS_FABRIC = isFabric();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    _component: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.jestAnimatedStyle = { value: {} };\n      }\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting) {\n          saveSnapshot(this._component as HTMLElement);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.ENTERING\n        );\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      this._sharedElementTransition?.unregisterTransition(this._viewTag);\n\n      const exiting = this.props.exiting;\n      if (\n        IS_WEB &&\n        this.props.exiting &&\n        !getReducedMotionFromConfig(this.props.exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this._viewTag,\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return (this._component as AnimatedComponentRef)?.getScrollableNode\n        ? (this._component as AnimatedComponentRef).getScrollableNode?.()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef() as AnimatedComponentRef;\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (IS_WEB && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewsRef.remove(this);\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (IS_FABRIC) {\n          removeFromPropsRegistry(this._viewTag);\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef() as AnimatedComponentRef;\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(this._component as AnimatedComponentRef, props);\n      } else {\n        (this._component as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as AnimatedComponentRef)\n        ?.getAnimatableRef\n        ? (this._component as AnimatedComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (IS_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            '[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js#L24).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedStyle.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting) {\n        saveSnapshot(this._component as HTMLElement);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._component as HTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      const layout = this.props.layout\n        ? maybeBuild(\n            this.props.layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n        : undefined;\n      updateLayoutAnimations(this._viewTag, LayoutAnimationType.LAYOUT, layout);\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = IS_WEB\n          ? (ref as HTMLElement)\n          : findNodeHandle(ref as Component);\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering) {\n            updateLayoutAnimations(\n              tag as number,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n          if (sharedTransitionTag && !IS_WEB) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? new SharedTransition();\n            const reduceMotionInTransition = getReduceMotionFromConfig(\n              sharedElementTransition.getReduceMotion()\n            );\n            if (!reduceMotionInTransition) {\n              sharedElementTransition.registerTransition(\n                tag as number,\n                sharedTransitionTag\n              );\n              this._sharedElementTransition = sharedElementTransition;\n            }\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        (this._component as HTMLElement)?.getBoundingClientRect !== undefined\n      ) {\n        return (this._component as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (isJest()) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = {\n          ...(filteredProps.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      return (\n        <Component\n          {...filteredProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}